@using Pegasus.Models

@{
    ViewBag.Title = "Σχολικά έτη";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

    @Html.AntiForgeryToken()
    <div class="page-header" style="margin:5px 30px 5px 30px">
        <span style="margin:5px 30px 5px 30px;font-family:'Segoe UI';font-size:large;text-shadow:1px 1px #8c8c8c">
            <font style="color:#494949;font-family:'Segoe UI'">Σχολικά Έτη</font>
        </span>
        <span style="margin:5px 10px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px">@Html.ActionLink("Επιστροφή", "Index", "Admin", null, new { @class = "btn btn-warning", style = "font-size:14px" })</span>
        <button class="btn btn-success" style="margin:5px 5px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px" onclick="RefreshGrid()">Ανανέωση</button>
    </div>

    <div class="body-content" style="margin:10px 30px 5px 30px">
        @(Html.Kendo().Grid<SchoolYearsViewModel>()
        .Name("Grid")
        .Columns(columns =>
        {
            columns.Bound(m => m.SY_TEXT).Width(30);
            columns.Bound(m => m.SY_DATESTART).Width(30);
            columns.Bound(m => m.SY_DATEEND).Width(30);
            columns.Command(command => command.Destroy().Text("Διαγραφή")).Width(28);
            columns.Bound("").Width(2).Filterable(false);
        })

            .ToolBar(toolBar =>
            {
                toolBar.Create();
                toolBar.Save().HtmlAttributes(new { @class = "k-button-success" });
            })
            .HtmlAttributes(new { style="font-size:15px" })
            .Filterable()
            .Navigatable()
            .Editable(editable => editable.Mode(GridEditMode.InCell).CreateAt(GridInsertRowPosition.Top))
            .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.MultipleColumn))
            .Scrollable(scr => scr.Height(420))
            .Pageable(pageable => pageable
            .Refresh(true)
            .PageSizes(true)
            .ButtonCount(5))
            .DataSource(datasource => datasource
            .Ajax()
            .Batch(true)
            .PageSize(60)
            .ServerOperation(false)
            .Model(model =>
            {
                model.Id(p => p.SY_ID);
            })
            .Create(create => create.Action("SchoolYear_Create", "Tools"))
            .Read(read => read.Action("SchoolYear_Read", "Tools"))
            .Update(update => update.Action("SchoolYear_Update", "Tools"))
            .Destroy(destroy => destroy.Action("SchoolYear_Destroy", "Tools"))
            .Events(events => events.Error("error_handler"))
        ) @* datasource*@
)
    </div>

<script type="text/javascript">

    function RefreshGrid(e) {
        var grid = $("#Grid").data("kendoGrid");
        grid.dataSource.read();
    }

    function error_handler(e) {
        if (e.errors) {
            var message = "";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "<br/>";
                    });
                }
            });
            MessageBoxAlert(message, "Σφάλμα");
        }
        RefreshGrid(e);
    }

</script>
