@using Pegasus.Models

@{
    ViewBag.Title = "TaxfreeList";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="page-header" style="margin:5px 30px 5px 30px">
    <span style="margin:5px 30px 5px 30px;font-family:'Segoe UI';font-size:large;text-shadow:1px 1px #8c8c8c">
        <font style="color:#494949;float:left;font-family:'Segoe UI'">Αφορολόγητα εισοδήματα οικονομικών ετών</font>
    </span>
    <span style="margin:5px 10px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px">@Html.ActionLink("Επιστροφή", "Index", "Admin", null, new { @class = "btn btn-warning", style = "font-size:14px" })</span>
    <button class="btn btn-info" style="margin:5px 5px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px" onclick="RefreshGrid()">Ανανέωση</button>
    <span style="margin:5px 5px 5px 10px;float:right;font-family:'Segoe UI';font-size:14px">@Html.ActionLink("Εκτύπωση", "TaxFreeIncomePrint", "Tools", null, new { @class = "btn btn-primary", style = "font-size:14px", target = "_blank" })</span>
</div>

<div class="body-content" style="margin:10px 30px 5px 30px">
        @(Html.Kendo().Grid<TaxFreeViewModel>()
        .Name("Grid")
        .Columns(columns =>
        {
            columns.Bound(m => m.YEAR_TEXT).Groupable(false).Width(30)
                .ClientFooterTemplate("Ολικό πλήθος: #=count#")
                .ClientGroupFooterTemplate("Πλήθος: #=count#");
            columns.Bound(m => m.TAXFREE).Groupable(false).Width(40);
            columns.Bound(m => m.NOMISMA).Width(30);
            columns.Command(command => command.Destroy().Text("Διαγραφή")).Width(28);
            columns.Bound("").Width(2).Filterable(false);
        })
        .ToolBar(toolBar =>
        {
            toolBar.Create();
            toolBar.Save();
        })
        .HtmlAttributes(new { style="font-size:14px" })
        .Filterable()
        .Groupable()
        .Navigatable()
        .Editable(editable => editable.Mode(GridEditMode.InCell).CreateAt(GridInsertRowPosition.Top))
        .Resizable(resize => resize.Columns(true))
        .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.MultipleColumn))
        .Scrollable(scr => scr.Height(380))
        .Pageable(pageable => pageable
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(5))
        .DataSource(datasource => datasource
            .Ajax()
            .Batch(true)
            .PageSize(60)
            .ServerOperation(false)
            .Model(model =>
            {
                model.Id(p => p.YEAR_ID);
            })
            .Create(create => create.Action("Taxfree_Create", "Tools"))
            .Read(read => read.Action("Taxfree_Read", "Tools"))
            .Update(update => update.Action("Taxfree_Update", "Tools"))
            .Destroy(destroy => destroy.Action("Taxfree_Destroy", "Tools"))
            .Events(events => events.Error("error_handler"))
            .Aggregates(a =>
            {
                a.Add(p => p.YEAR_TEXT).Count();
            })
        ) @* datasource*@
    )
</div>

<script type="text/javascript">

    function RefreshGrid(e) {
        var grid = $("#Grid").data("kendoGrid");
        grid.dataSource.read();
    }

    function error_handler(e) {
        if (e.errors) {
            var message = "";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "<br/>";
                    });
                }
            });
            MessageBoxAlert(message, "Σφάλμα");
        }
        RefreshGrid(e);
    }

</script>


