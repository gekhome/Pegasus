@using Pegasus.DAL;
@using Pegasus.Models;
@{
    ViewBag.Title = "Ατήσεις και αρχεία";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    string schoolYear = ViewData["schoolYearText"].ToString();
    string protocol = ViewData["prokirixiProtocol"].ToString();
    string displayInfo = schoolYear + ": " + protocol;       
}

<head>
    <title></title>
    <script src="https://ajax.aspnetcdn.com/ajax/jquery.ui/1.11.4/jquery-ui.js" type="text/javascript"></script>
    <link href="https://ajax.aspnetcdn.com/ajax/jquery.ui/1.12.1/themes/base/jquery-ui.css" rel="stylesheet" type="text/css" />
    @*<link href="@Url.Content("~/Content/jquery-ui-themes-1.12.1/themes/base/jquery-ui.css")" rel="stylesheet" type="text/css" />*@

</head>


@Html.AntiForgeryToken()
<div class="page-header" style="margin:5px 30px 5px 30px">
    <span style="margin:5px 30px 5px 30px;font-family:'Segoe UI';font-size:18px">
        <font style="color:#494949;float:left;font-family:'Segoe UI';font-style:normal">
            @Html.Label("", "Μητρώο ανεβασμένων δικαιολογητικών ", new { @style = "font-family:'Segoe UI';font-style:normal" })
        </font>
    </span>
    <span style="margin:0px 10px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px">@Html.ActionLink("Επιστροφή", "Index", "Admin", null, new { @class = "btn btn-warning", style = "font-size:14px" })</span>
    <button class="btn btn-primary" style="margin:0px 5px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px" onclick="RefreshGrid()">Ανανέωση</button>
</div>

<div class="body-content" style="margin: 5px 30px 10px 30px; font-size: 14px; background-color: #1D7CAE; padding: 4px 4px 4px 4px">
    <label style="font-size:14px;font-weight:bold;color:white">Επιλογή προκήρυξης : </label>
    @(Html.Kendo().DropDownList()
        .Name("ddlProkirixeis")
        .DataTextField("PROTOCOL")
        .DataValueField("ID")
        .HtmlAttributes(new { style = "width:220px;font-size:14px;font-weight:bold" })
        .OptionLabel("Επιλογή...")
        .AutoBind(true)
        .Enable(true)
        .DataSource(source => { source.Read(read => { read.Action("GetProkirixeis", "Admin"); }).ServerFiltering(true); })
        .Events(e =>
        {
            e.Select("ddlselect");
        })
    )
</div>


<div class="body-content" style="margin:0px 30px 5px 30px">
    @(Html.Kendo().Grid<sqlTeacherAitiseisModel>()
        .Name("Master")
        .Columns(columns =>
        {
            columns.Bound(x => x.AFM).Width(20);
            columns.Bound(x => x.AITISI_PROTOCOL).Width(30)
                .ClientFooterTemplate("Ολικό πλήθος: #=count#")
                .ClientGroupFooterTemplate("Πλήθος: #=count#");
            columns.Bound(x => x.FULLNAME).Width(40).Title("Ονοματεπώνυμο");
            columns.Bound(c => c.EIDIKOTITA_TEXT).Title("Κλάδος-Ειδικότητα").Width(60);
            columns.Bound(c => c.SCHOOL_NAME).Title("Σχολείο").Width(40);
            columns.Template(@<text></text>)
            .ClientTemplate(
            "<a class=\"k-button k-button-icontext\" href='" + Url.Action("EditAitisi", "AdminAitiseis") + "?aitisiId=#=AITISI_ID#' target = _blank><span class=\"k-icon k-edit\"></span>Καρτέλα</a>"
            ).Width(24);
            columns.Template(@<text></text>)
            .ClientTemplate(
            "<a class=\"k-button k-button-icontext\" href='" + Url.Action("ListSchools", "AdminAitiseis") + "?aitisiId=#=AITISI_ID#' target = _blank><span class=\"k-icon k-edit\"></span>Σχολεία</a>"
            ).Width(24);
        })
            .HtmlAttributes(new { style="font-size:13px" })
            .Navigatable()
            .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.MultipleColumn))
            .Filterable()
            .Groupable()
            .Selectable()
            .Scrollable(scr => scr.Height(360))
            .Pageable(pageable => pageable
            .Refresh(true)
            .PageSizes(true)
            .ButtonCount(10))
            .DataSource(datasource => datasource
            .Ajax()
            .Batch(true)
            .PageSize(60)
            .ServerOperation(true)
            .Events(events => { events.Error("error_handler"); })
            .Model(model =>
            {
                model.Id(p => p.AITISI_ID);
            })
            .Read(read => read.Action("AitiseisUploads_Read", "AdminAitiseis").Data("dataProkirixeis"))
            .Aggregates(a =>
            {
                a.Add(p => p.AITISI_PROTOCOL).Count();
            })
        )
        .Events(events => events.Change("change"))
    )
</div>

<div class="body-content" style="margin:10px 30px 5px 30px">
    @(Html.Kendo().TabStrip()
    .Name("FilesTabStrip")
    .Items(items =>
    {
        items.Add()
        .Text("Αρχεία γενικής φύσεως")
        .Selected(true)
        .Content(
        @<text>
        <div id="general-files">
            @(Html.Kendo().Grid<xUploadedGeneralFilesModel>()
                .Name("Child1")
                .AutoBind(false)
                .HtmlAttributes(new { style = "font-size:14px" })
                .Filterable()
                .Editable(editable => editable.Mode(GridEditMode.InLine).CreateAt(GridInsertRowPosition.Top))
                .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.MultipleColumn))
                .Pageable(pageable => pageable
                .Refresh(true)
                .PageSizes(true)
                .ButtonCount(5))
                .Scrollable(scr => scr.Height(240))
                .Columns(columns =>
                {
                    columns.Bound(c => c.FileID).Width(20).Hidden();
                    columns.Bound(c => c.FileName).Width(40);
                    columns.Bound(c => c.UploadSummary).Width(50);
                    columns.Bound(c => c.TeacherAFM).Width(20);
                    columns.Command(command => { command.Custom("\u13EB" + " Προβολή - Κατέβασμα").Click("showGeneralPDF"); }).Width(30);
                })
                .DataSource(ds => ds
                .Ajax()
                .Batch(false)
                .PageSize(20)
                .ServerOperation(false)
                .Model(model =>
                {
                    model.Id(p => p.FileID);
                })
                .Read(read => read.Action("GeneralFiles_Read", "AdminAitiseis").Data("data"))
                )
            )
        </div>
        </text>);
        items.Add()
        .Text("Αρχεία διδακτικής")
        .Selected(false)
        .Content(
        @<text>
        <div id="teaching-files">
            @(Html.Kendo().Grid<xUploadedTeachingFilesModel>()
            .Name("Child2")
            .AutoBind(false)
            .HtmlAttributes(new { style = "font-size:14px" })
            .Filterable()
            .Editable(editable => editable.Mode(GridEditMode.InLine).CreateAt(GridInsertRowPosition.Top))
            .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.MultipleColumn))
            .Pageable(pageable => pageable
            .Refresh(true)
            .PageSizes(true)
            .ButtonCount(5))
            .Scrollable(scr => scr.Height(240))
            .Columns(columns =>
            {
                columns.Bound(c => c.FileID).Width(20).Hidden();
                columns.Bound(c => c.FileName).Width(40);
                columns.Bound(c => c.UploadSummary).Width(50);
                columns.Bound(c => c.TeacherAFM).Width(20);
                columns.Command(command => { command.Custom("\u13EB" + " Προβολή - Κατέβασμα").Click("showTeachingPDF"); }).Width(30);
            })
            .DataSource(ds => ds
            .Ajax()
            .PageSize(20)
            .ServerOperation(false)
            .Model(model =>
            {
                model.Id(p => p.FileID);
            })
            .Read(read => read.Action("TeachingFiles_Read", "AdminAitiseis").Data("data"))
            )
            )
        </div>
        </text>);
        items.Add()
        .Text("Αρχεία επαγγελματικής")
        .Selected(false)
        .Content(
        @<text>
        <div id="vocation-files">
            @(Html.Kendo().Grid<xUploadedVocationFilesModel>()
            .Name("Child3")
            .AutoBind(false)
            .HtmlAttributes(new { style = "font-size:14px" })
            .Filterable()
            .Editable(editable => editable.Mode(GridEditMode.InLine).CreateAt(GridInsertRowPosition.Top))
            .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.MultipleColumn))
            .Pageable(pageable => pageable
            .Refresh(true)
            .PageSizes(true)
            .ButtonCount(5))
            .Scrollable(scr => scr.Height(240))
            .Columns(columns =>
            {
                columns.Bound(c => c.FileID).Width(20).Hidden();
                columns.Bound(c => c.FileName).Width(40);
                columns.Bound(c => c.UploadSummary).Width(50);
                columns.Bound(c => c.TeacherAFM).Width(20);
                columns.Command(command => { command.Custom("\u13EB" + " Προβολή - Κατέβασμα").Click("showVocationPDF"); }).Width(30);
            })
            .DataSource(ds => ds
            .Ajax()
            .PageSize(20)
            .ServerOperation(false)
            .Model(model =>
            {
                model.Id(p => p.FileID);
            })
            .Read(read => read.Action("VocationFiles_Read", "AdminAitiseis").Data("data"))
            )
            )
        </div>
        </text>);
    })
    )
</div>

<div id="dialog" style="display: none"></div>

<script type="text/javascript">

    function ddlselect(e) {
        var dataItem = this.dataItem(e.item.index());

        if (dataItem) {
            var prokID = dataItem.ID;
            $("#Master").data("kendoGrid").dataSource.read({ prokirixiId: prokID });
            $("#Master").css("display", "block");
        }
    };

    function dataProkirixeis() {
        var prokID = $("#ddlProkirixeis").data("kendoDropDownList").value();
        if (prokID) {
            return { prokirixiId: prokID }
        }
        else {
            return { prokirixiId: 0 }
        }
    }

    function RefreshChildren() {
        $("#Child1").data("kendoGrid").dataSource.read();

        $("#Child2").data("kendoGrid").dataSource.read();

        $("#Child3").data("kendoGrid").dataSource.read();
    }

    function RefreshGrid(e) {
        var grid = $("#Master").data("kendoGrid");
        grid.dataSource.read();
    }

    function change(e) {
        var dataItem = this.dataItem(this.select());
        var aitisiId = dataItem.AITISI_ID;

        $("#Child1").data("kendoGrid").dataSource.read({ aitisiID: aitisiId });

        $("#Child2").data("kendoGrid").dataSource.read({ aitisiID: aitisiId });

        $("#Child3").data("kendoGrid").dataSource.read({ aitisiID: aitisiId });

    }

    function data() {
        var masterGrid = $("#Master").data("kendoGrid");
        // get data item for selected row
        var dataItem = masterGrid.dataItem(masterGrid.select());
        if (dataItem) {
            return { aitisiID: dataItem.AITISI_ID };
        }
        else {
            return { aitisiID: 0 };
        }
    }

    function showGeneralPDF(e) {
        e.preventDefault();
        var grid = this;
        var row = $(e.currentTarget).closest("tr");
        var data = this.dataItem(row);

        var currentDomain = '@Url.Content("~")';
        var url = currentDomain + "Uploads/Documents/" + data.TeacherAFM + "/";
        fileName = data.FileName;

        $("#dialog").dialog({
            modal: true,
            title: fileName,
            width: 800,
            height: 600,
            buttons: {
                Κλείσιμο: function () {
                    $(this).dialog('close');
                }
            },
            open: function () {
                var object = "<object data=\"{FileName}\" type=\"application/pdf\" width=\"800px\" height=\"600px\">";
                object += "Το αρχείο που ζητήθηκε δεν βρέθηκε ή δεν έχει την κατάλληλη μορφή για προβολή.";
                object += "</object>";
                object = object.replace(/{FileName}/g, url + fileName);
                $("#dialog").html(object);
            }
        });
    }

    function showTeachingPDF(e) {
        e.preventDefault();
        var grid = this;
        var row = $(e.currentTarget).closest("tr");
        var data = this.dataItem(row);

        var currentDomain = '@Url.Content("~")';
        var url = currentDomain + "Uploads/Teaching/" + data.TeacherAFM + "/";
        fileName = data.FileName;

        $("#dialog").dialog({
            modal: true,
            title: fileName,
            width: 800,
            height: 600,
            buttons: {
                Κλείσιμο: function () {
                    $(this).dialog('close');
                }
            },
            open: function () {
                var object = "<object data=\"{FileName}\" type=\"application/pdf\" width=\"800px\" height=\"600px\">";
                object += "Το αρχείο που ζητήθηκε δεν βρέθηκε ή δεν έχει την κατάλληλη μορφή για προβολή.";
                object += "</object>";
                object = object.replace(/{FileName}/g, url + fileName);
                $("#dialog").html(object);
            }
        });
    }

    function showVocationPDF(e) {
        e.preventDefault();
        var grid = this;
        var row = $(e.currentTarget).closest("tr");
        var data = this.dataItem(row);

        var currentDomain = '@Url.Content("~")';
        var url = currentDomain + "Uploads/Vocation/" + data.TeacherAFM + "/";
        fileName = data.FileName;

        $("#dialog").dialog({
            modal: true,
            title: fileName,
            width: 800,
            height: 600,
            buttons: {
                Κλείσιμο: function () {
                    $(this).dialog('close');
                }
            },
            open: function () {
                var object = "<object data=\"{FileName}\" type=\"application/pdf\" width=\"800px\" height=\"600px\">";
                object += "Το αρχείο που ζητήθηκε δεν βρέθηκε ή δεν έχει την κατάλληλη μορφή για προβολή.";
                object += "</object>";
                object = object.replace(/{FileName}/g, url + fileName);
                $("#dialog").html(object);
            }
        });
    }

</script>



