@using Pegasus.DAL;
@using Pegasus.Models;
@{
    ViewBag.Title = "Αιτήσεις χωρίς εμπειρία";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}


<style>
    .k-grid {
        font-size: 10px;
    }
</style>

@Html.AntiForgeryToken()
<div class="page-header" style="margin:5px 20px 5px 20px">
    <div>
        <span style="font-family:'Segoe UI';font-size:large;text-shadow:1px 1px #8c8c8c">
            <font style="color:#494949;font-family:'Segoe UI'">Αιτήσεις χωρίς προϋπηρεσίες</font>
        </span>
        <span style="margin:0px 5px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px">@Html.ActionLink("Επιστροφή", "Index", "Admin", null, new { @class = "btn btn-warning", style = "font-size:14px" })</span>
        <span style="margin:0px 5px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px">@Html.ActionLink("Εκτύπωση", "AitiseisWithoutWorkPrint", "Admin", null, new { @class = "btn btn-info", style = "font-size:14px", target = "_blank" })</span>
    </div>
</div>

<div class="body-content" style="margin:10px 20px 5px 20px;font-size:14px;background-color:#1D7CAE;padding:4px 4px 4px 4px">
    <label style="font-size:14px;font-weight:bold;color:white">Προκήρυξη : </label>
    @(Html.Kendo().DropDownList()
        .Name("ddlProkirixeis")
        .DataTextField("PROTOCOL")
        .DataValueField("ID")
        .HtmlAttributes(new { style = "width:220px;font-size:14px;font-weight:bold" })
        .OptionLabel("Επιλογή...")
        .AutoBind(true)
        .Enable(true)
        .DataSource(source => { source.Read(read => { read.Action("GetProkirixeis", "Admin"); }).ServerFiltering(true); })
        .Events(e =>
        {
            e.Select("ddlselect");
        })
    )
</div>

<div class="body-content" style="margin:5px 20px 5px 20px">
    @(Html.Kendo().Grid<AitiseisWithoutWorkViewModel>()
        .Name("Grid")
        .Columns(columns =>
        {
            columns.Bound(c => c.AITISI_PROTOCOL).Title("Α.Π. αίτησης").Width(26);
            columns.Bound(c => c.AFM).Title("Α.Φ.Μ.").Width(16).Groupable(false);
            columns.Bound(c => c.FULLNAME).Title("Ονοματεπώνυμο").Width(40).Groupable(false)
                .ClientFooterTemplate("Συνολ. πλήθος: #=count#")
                .ClientGroupFooterTemplate("Πλήθος: #=count#");
            columns.Bound(c => c.AGE).Title("Ηλικία").Width(12);
            columns.Bound(c => c.EIDIKOTITA_DESC).Title("Κλάδος-Ειδικότητα").Width(40);
            columns.Bound(c => c.KLADOS_NAME).Title("Κλάδος").Width(15);
            columns.Bound(c => c.SCHOOL_NAME).Title("ΙΕΚ Αίτησης").Width(30);
            columns.Template(
                @<text></text>)
            .ClientTemplate(
            "<a class=\"k-button k-button-icontext\" href='" + Url.Action("ResultsMoriaView", "Admin") + "?AITISI_ID=#=AITISI_ID#' target = _blank><span class=\"k-icon k-edit\"></span>Μόρια</a>"
            ).Width(18);
        })
            .HtmlAttributes(new { style = "display:block;font-size:12px" })        
            .Filterable()
            .Groupable()
            .Scrollable(scr => scr.Height(400))
            .Pageable(pageable => pageable
            .Refresh(true)
            .PageSizes(true)
            .ButtonCount(10))
            .DataSource(datasource => datasource
            .Ajax()
            .PageSize(60)
            .ServerOperation(true)
            .Events(events => events.Error("error_handler"))
            .Model(model =>
            {
                model.Id(p => p.AITISI_ID);
            })
            .Aggregates(a =>
            {
                a.Add(p => p.FULLNAME).Count();
            })
            .Read(read => read.Action("AitiseisWithoutWork_Read", "Admin").Data("data"))
        )
        .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.MultipleColumn))
    )
</div>

<script type="text/javascript">

    function ddlselect(e) {
        var dataItem = this.dataItem(e.item.index());

        if (dataItem) {
            var prokID = dataItem.ID;
            $("#Grid").data("kendoGrid").dataSource.read({ prokirixiId: prokID });
            $("#Grid").css("display", "block");
        }
    };

    function data() {
        var prokID = $("#ddlProkirixeis").data("kendoDropDownList").value();
        if (prokID) {
            return { prokirixiId: prokID }
        }
        else {
            return { prokirixiId: 0 }
        }
    }

    function RefreshGrid(e) {
        var grid = $("#Grid").data("kendoGrid");
        grid.dataSource.read();
    }

    function error_handler(e) {
        if (e.errors) {
            var message = "";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "<br/>";
                    });
                }
            });
            MessageBoxAlert(message, "Σφάλμα");
        }
        $("#Grid").data("kendoGrid").dataSource.read();
    }

</script>

